apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{ .Values.metadata.appName }}
  name: {{ .Values.metadata.appName }}
  namespace: {{ .Release.Name }}-{{ .Values.metadata.namespace }}
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: {{ .Values.metadata.appName }}
  template:
    metadata:
      labels:
        app: {{ .Values.metadata.appName }}
    spec:
      securityContext:
        fsGroup: 1000 
        runAsUser: 0
      
      initContainers:
      - name: install-docker
        image: {{ .Values.images.docker }}
        command: ["cp", "/usr/local/bin/docker", "/data/docker"]    
        volumeMounts:
        - name: docker
          mountPath: "/data"
      
      - name: install-kubectl
        image: {{ .Values.images.kubernetes }}
        command: ["cp", "/usr/local/bin/kubectl", "/data/kubectl"]    
        volumeMounts:
        - name: kubectl
          mountPath: "/data" 
      
      containers:
      - image: {{ .Values.image.repository }}/{{ .Values.image.name }}:{{ .Values.image.tag }}
        imagePullPolicy: Always
        name: jenkins            
        ports:
        - containerPort: 8080
          protocol: TCP
        - containerPort: 50000
          protocol: TCP
        readinessProbe:
          failureThreshold: 5
          httpGet:
            path: /login
            port: 8080
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 2
          timeoutSeconds: 5
        
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - name: docker-sock
          mountPath: /var/run
                 
        - name: data-disk
          mountPath: /var/jenkins_home
        
        - name: docker
          subPath: "docker"
          mountPath: "/usr/local/bin/docker"
        
        - name: kubectl
          subPath: "kubectl"
          mountPath: "/usr/local/bin/kubectl"
          
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
      volumes:
      - name: data-disk
        persistentVolumeClaim:
          claimName: {{ .Values.metadata.pvcName }}
      - name: docker-sock
        hostPath:
          path: /var/run
          type: ""
      - name: docker
        emptyDir: {}
      - name: kubectl
        emptyDir: {}